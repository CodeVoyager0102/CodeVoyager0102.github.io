<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>面试相关问题</title>
      <link href="/2023/10/04/Node.js%E4%B8%BA%E4%BB%80%E4%B9%88%E6%97%A0%E6%B3%95%E8%B0%83%E7%94%A8DOM%E5%92%8CBOM%E7%AD%89%E6%B5%8F%E8%A7%88%E5%99%A8%E5%86%85%E7%BD%AEAPI%EF%BC%9F/"/>
      <url>/2023/10/04/Node.js%E4%B8%BA%E4%BB%80%E4%B9%88%E6%97%A0%E6%B3%95%E8%B0%83%E7%94%A8DOM%E5%92%8CBOM%E7%AD%89%E6%B5%8F%E8%A7%88%E5%99%A8%E5%86%85%E7%BD%AEAPI%EF%BC%9F/</url>
      
        <content type="html"><![CDATA[<h4 id="Node-js为什么无法调用DOM和BOM等浏览器内置API？"><a href="#Node-js为什么无法调用DOM和BOM等浏览器内置API？" class="headerlink" title="Node.js为什么无法调用DOM和BOM等浏览器内置API？"></a>Node.js为什么无法调用DOM和BOM等浏览器内置API？</h4><p>答：因为Node.js是一个独立的运行环境，在Node中只提供了与Node有关的API，并没有提供浏览器内置的那些DOM,BOM,AJAX等的相关API</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>微信小程序</title>
      <link href="/2023/09/24/wx-app/"/>
      <url>/2023/09/24/wx-app/</url>
      
        <content type="html"><![CDATA[<h1 id="小程序简介"><a href="#小程序简介" class="headerlink" title="小程序简介"></a>小程序简介</h1><h2 id="小程序与普通网页开发的区别"><a href="#小程序与普通网页开发的区别" class="headerlink" title="小程序与普通网页开发的区别"></a>小程序与普通网页开发的区别</h2><h3 id="运行环境不同"><a href="#运行环境不同" class="headerlink" title="运行环境不同"></a>运行环境不同</h3><p>​网页运行在浏览器环境中，小程序运行在微信环境中</p><h3 id="API不同"><a href="#API不同" class="headerlink" title="API不同"></a>API不同</h3><p>​由于运行环境的不同，所以小程序中，<em>无法调用DOM和BOM的API。</em>但是，小程序中可以调用微信环境提供的各种API，例如：地理定位；扫码；支付。</p><h3 id="开发模式不同"><a href="#开发模式不同" class="headerlink" title="开发模式不同"></a>开发模式不同</h3><p>​网页的开发模式：浏览器+代码编辑器</p><p>​小程序有自己的一套标准 开发模式：申请小程序开发账号；安装小程序开发者工具；创建和配置小程序项目</p><h2 id="体验小程序"><a href="#体验小程序" class="headerlink" title="体验小程序"></a>体验小程序</h2><p>可以使用手机微信（6.7.2及以上版本）扫码下方小程序，体验小程序：</p><p><img src="/../pic/wxapp.png"></p><h3 id="注册账号与获取AppID"><a href="#注册账号与获取AppID" class="headerlink" title="注册账号与获取AppID"></a>注册账号与获取AppID</h3><ul><li><p>​1.使用浏览器打开  <a href="https://mp.weixin.qq.com/">https://mp.weixin.qq.com/</a>  网址，点击右上角的“立即注册”即可进入到小程序开发的注册流程—&gt;选择注册账户类型（小程序）—&gt;填写账号信息—&gt;提示邮箱激活—&gt;点击链接激活账号—&gt;选择主体类型（个人）—&gt;主体信息登记—&gt;获取小程序的AppID</p></li><li><p>​2.mp.weixin.qq.com中左侧栏的&lt;&#x2F;&gt;开发—&gt;开发设置—&gt;AppID（小程序ID）</p></li></ul><h3 id="了解微信开发者工具"><a href="#了解微信开发者工具" class="headerlink" title="了解微信开发者工具"></a>了解微信开发者工具</h3><p>​微信开发者工具是官方推荐使用的小程序开发工具，它提供的主要功能如下：</p><ul><li>快速创建小程序项目</li><li>代码的查看与编辑</li><li>对小程序功能进行测试</li><li>小程序的预览和发布</li></ul><h3 id="下载并安装开发者工具"><a href="#下载并安装开发者工具" class="headerlink" title="下载并安装开发者工具"></a>下载并安装开发者工具</h3><p>​推荐下载和安装最新的稳定版（Stable Bulud）的微信开发者工具，链接  <a href="https://developers.weixin.qq.com/miniprogram/dev/devtools/stable.html">https://developers.weixin.qq.com/miniprogram/dev/devtools/stable.html</a>  下载—&gt;安装—&gt;扫码登录</p><h2 id="小程序代码的构成"><a href="#小程序代码的构成" class="headerlink" title="小程序代码的构成"></a>小程序代码的构成</h2><h3 id="小程序的基本组成结构"><a href="#小程序的基本组成结构" class="headerlink" title="小程序的基本组成结构"></a>小程序的基本组成结构</h3><ul><li><p>pages用来存放所有小程序的页面</p></li><li><p>utils用来存放工具性质的模块（例如：格式化时间的自定义模块）</p></li><li><p>app.js小程序项目的入口文件</p></li><li><p>app.json小程序项目的全局配置文件</p></li><li><p>app.wxss小程序项目的全局样式文件</p></li><li><p>project.config.json项目的配置文件</p></li><li><p>sitemp.json用来配置小程序及其页面是否允许被微信索引</p></li></ul><h3 id="小程序页面的组成部分"><a href="#小程序页面的组成部分" class="headerlink" title="小程序页面的组成部分"></a>小程序页面的组成部分</h3><p>​小程序官方建议把所有小程序的页面，都存放在page目录中，以单独的文件存在。</p><p>​其中，每个页面都由4个基本文件组成：</p><ul><li><p>.js文件（页面的脚本文件，存放页面的数据、事件处理函数等）</p></li><li><p>.json文件（当前页面的配置文件，配置窗口的外观、表现等）</p></li><li><p>.wxml文件（页面的模板结构文件）</p></li><li><p>.wxss文件（当前页面的样式表文件）</p></li></ul><h3 id="json配置文件的作用"><a href="#json配置文件的作用" class="headerlink" title="json配置文件的作用"></a>json配置文件的作用</h3><p>​json是一种数据格式，在实际开发中，json总是以配置文件的形式出现。小程序项目中也不例外：通过不同的.json配置文件，可以对小程序项目进行不同级别的配置。</p><p>小程序项目中有4种json配置文件：</p><ul><li>项目根目录中的app.json配置文件</li><li>项目根目录中的project.config.json配置文件</li><li>项目根目录中的sitemap.jsp配置文件</li><li>每个页面文件夹中的.json配置文件</li></ul><h3 id="sitemap-json文件"><a href="#sitemap-json文件" class="headerlink" title="sitemap.json文件"></a>sitemap.json文件</h3><p>​微信现已开放小程序内搜索，效果类似于PC网页的CEO。sitemap.json文件用来配置小程序页面是否允许微信索引。当开发者允许微信索引时，微信会通过爬虫的形式，为小程序的页面内容建立索引。当用户的搜索关键字和页面的索引匹配成功时，小程序的页面将可能展示在搜索结果中。</p><p>​注意：sitemap的索引提示是默认开启的，如需要关闭sitemap的索引提示，可在小程序项目配置文件project.config.json的setting中配置字段checkSiteMap为false</p><p>​只需在app.json—&gt;pages中新增页面的存放路径，小程序开发者工具即可帮助我们自动创建对应的页面文件。调整app.json-&gt;pages数组中页面路径的前后顺序，即可修改项目的首页。小程序会把排在第一位的页面，当作项目首页进行渲染。</p><p>​小程序中的每一个页面，可以使用.json文件来对本页面的窗口外观进行配置，页面中的配置项会覆盖app.json的window中相同的配置项</p><h3 id="WXML模板"><a href="#WXML模板" class="headerlink" title="WXML模板"></a>WXML模板</h3><h4 id="WXML和HTML的区别"><a href="#WXML和HTML的区别" class="headerlink" title="WXML和HTML的区别"></a>WXML和HTML的区别</h4><p>标签名称不同</p><ul><li><p>HTML(div、span、img、a)</p></li><li><p>WXML(view、text、image、navigator)</p></li></ul><p>属性节点不同</p><ul><li><a href="#">超链接</a></li><li><navigator url="/pages/home/home"></navigator></li></ul><p>提供了类似于Vue中的模板语法</p><ul><li><p>数据绑定</p></li><li><p>列表渲染</p></li><li><p>条件渲染                                                                                                                                                                                                                                             </p><h4 id="WXSS和CSS的区别"><a href="#WXSS和CSS的区别" class="headerlink" title="WXSS和CSS的区别"></a>WXSS和CSS的区别</h4></li></ul><p>新增了rpx尺寸单位</p><ul><li><p>css中需要手动进行像素单位换算，例如rem</p></li><li><p>wxss在底层支持新的尺寸单位rpx，在不同大小的屏幕上小程序会自动进行换算</p></li></ul><p>提供了全局的样式和局部样式</p><ul><li>项目根目录的app.wxss会作用于所有小程序页面</li><li>局部页面的.wxss样式仅对当前页面生效</li></ul><p>WXSS仅支持部分css选择器</p><ul><li>.class和#id</li><li>element</li><li>并集选择器、后代选择器</li><li>：：after和：：before等伪类选择器</li></ul><h3 id="js逻辑交互"><a href="#js逻辑交互" class="headerlink" title="js逻辑交互"></a>js逻辑交互</h3><h4 id="小程序中-js文件的分类"><a href="#小程序中-js文件的分类" class="headerlink" title="小程序中.js文件的分类"></a>小程序中.js文件的分类</h4><p>一个项目仅仅提供界面展示是不够的，在小程序中，我们通过.js文件来处理用户的操作、例如：响应用户的点击、获取用户的位置等等。</p><p>小程序中的js文件分为3类，分别是：</p><ol><li><p>app.js</p><p>是整个小程序项目的入口文件，通过调用App()函数来启动整个小程序</p></li><li><p>页面的.js文件</p><p>是页面的入口文件，通过调用Page()函数来创建并运行页面</p></li><li><p>普通的.js文件</p><p>是普通的功能模块文件，用来封装公共的函数或属性供页面使用</p></li></ol><h2 id="小程序的宿主环境"><a href="#小程序的宿主环境" class="headerlink" title="小程序的宿主环境"></a>小程序的宿主环境</h2><h3 id="宿主环境简介"><a href="#宿主环境简介" class="headerlink" title="宿主环境简介"></a>宿主环境简介</h3><p>​    1.什么是宿主环境</p><p>​宿主环境(host environment)指的是程序运行所必须的依赖坏境。例如：Android系统和iOS系统是两个不同的宿主环境。安卓的微信App是不能在iOS坏境下运行的，所以Android是安卓软件的宿主环境，脱离了宿主环境的软件是没有任何意义的！</p><p>​2.小程序的宿主环境</p><p>​手机微信是小程序的宿主坏境。小程序借助宿主环境提供的能力，可以完成许多普通网页无法完成的功能，例如：微信扫码、微信支付、微信登录、地理定位、etc…</p><h3 id="通信模型"><a href="#通信模型" class="headerlink" title="通信模型"></a>通信模型</h3><p>1.通信的主体:</p><p>小程序中的通信的主体是渲染层和逻辑层，其中：</p><ul><li>WXML模板和WXSS样式工作在渲染层</li><li>JS脚本工作在逻辑层</li></ul><p>2.小程序中的通信模型分为两部分：</p><ul><li>渲染层和逻辑层之间的通信-&gt;由微信客户端进行转发</li><li>逻辑层和第三方服务器之间的通信-&gt;由微信客户端进行转发</li></ul><h3 id="运行机制"><a href="#运行机制" class="headerlink" title="运行机制"></a>运行机制</h3><p>1.小程序启动的过程</p><ul><li>把小程序的代码包下载到本地</li><li>解析app.json全局配置文件</li><li>执行app.js小程序入口文件。调用App()创建小程序案例</li><li>渲染小程序首页</li><li>小程序启动完成</li></ul><p>2.页面渲染的过程</p><ul><li>加载解析页面的.json配置文件</li><li>加载页面的.wxml模板和.wxss样式</li><li>执行页面的.js文件，调用Page()创建页面案例</li><li>页面渲染完成</li></ul><h3 id="组件"><a href="#组件" class="headerlink" title="组件"></a>组件</h3><p>1.小程序中的组件的分类</p><p>小程序中的组件也是由宿主环境提供的，开发者可以基于组件快速搭建出漂亮的页面结构。官方把小程序的组件分为了9大类，分别是：</p><ul><li>视图容器</li><li>基础内容</li><li>表单组件</li><li>导航组件</li><li>媒体组件</li><li>map地图组件</li><li>canvas画布组件</li><li>开放能力</li><li>无障碍访问</li></ul><p>2.常用的视图容器各组件</p><p>2.1 view</p><ul><li>普通视图区域</li><li>类似于HTML中的div，是一个块级元素</li><li>常用来实现页面的布局效果</li></ul><p>2.2 scroll-view</p><ul><li>可滚动的视图区域</li><li>常用来实现滚动列表效果</li></ul><p>2.3 swiper和swiper-item</p><ul><li>轮播图容器组件 和 轮播图item组件</li></ul><p>3.view组件的基本使用</p><p>​实现flex横向布局效果</p><h2 id="协同工作和发布"><a href="#协同工作和发布" class="headerlink" title="协同工作和发布"></a>协同工作和发布</h2>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>我的第一篇博客</title>
      <link href="/2023/09/15/hello-world/"/>
      <url>/2023/09/15/hello-world/</url>
      
        <content type="html"><![CDATA[<p>哈喽~大家好呀，我是淡然置之，欢迎大家来访问我的博客。在今后的生活里，我会在这里分享一些与计算机专业相关的资源，有兴趣的小伙伴可以一起互相学习哦！</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><p><img src="C:/Users/29306/AppData/Roaming/Typora/typora-user-images/image-20230920223709571.png" alt="image-20230920223709571"></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
